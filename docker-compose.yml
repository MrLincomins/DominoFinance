version: "3"

services:
  chatbot-mysql:
    container_name: chatbot-mysql
    restart: unless-stopped
    image: mysql:8
    command:
      - mysqld
      - --character-set-server=utf8mb4
      - --collation-server=utf8mb4_bin
      - --default-authentication-plugin=mysql_native_password
    environment:
      MYSQL_DATABASE: 'chatbot'
      MYSQL_ROOT_PASSWORD: 'root_chatbot'
      MYSQL_USER: 'chatbot'
      MYSQL_PASSWORD: 'chatbot_pwd'
    ports:
      - '3306:3306'
    volumes:
      - ./.docker/mysql/data:/var/lib/mysql
      - ./.docker/mysql/my.cnf:/etc/mysql/my.cnf
      - ./.docker/mysql-files:/var/lib/mysql-files
    networks:
      - chatbot

  chatbot-nginx:
    container_name: chatbot-nginx
    restart: always
    image: nginx
    ports:
      - 443:443
      - 80:80
    volumes:
      - ./.docker/nginx/hosts:/etc/nginx/conf.d
      - ./www:/var/www
      - ./.docker/nginx/log:/var/log/nginx
      - ./.docker/nginx/nginx.conf:/etc/nginx/nginx.conf
    networks:
      - chatbot

  chatbot-php:
    build:
      context: ./.docker/php
      dockerfile: Dockerfile
    image: php
    container_name: chatbot-php
    restart: unless-stopped
    working_dir: /var/www/
    volumes:
      - ./www:/var/www
      - ./.docker/php/php.ini:/usr/local/etc/php/conf.d/uploads.ini
    networks:
      - chatbot
    depends_on:
      - chatbot-mysql
      - chatbot-nginx

#  chatbot-python:
#    build:
#      context: .
#      dockerfile: .docker/python/Dockerfile
#    image: python
#    container_name: chatbot-python
#    restart: unless-stopped
#    working_dir: /var/www/
#    volumes:
#      - ./www:/var/www
#    ports:
#      - 5050:5050
#    networks:
#      - chatbot
#    depends_on:
#      - chatbot-mysql
#      - chatbot-nginx


networks:
  chatbot:
    driver: bridge
